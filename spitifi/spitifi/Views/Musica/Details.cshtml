@model spitifi.Models.DbModels.Musica
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Details";
    
    var dono = false;
    var userNameDono = Model.Dono.Username;
    if (User.Identity?.Name == userNameDono)
    {
        dono = true;
    }
}

<h1>Detalhes</h1>

<div>
    <h4>Musica</h4>
    <hr />
    <table class="table">
        <tr>
            <th>@Html.DisplayNameFor(model => model.Nome)</th>
            <td>@Html.DisplayFor(model => model.Nome)</td>
        </tr>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Album)</th>
            <td>@Html.DisplayFor(model => model.Album.Titulo)</td>
        </tr>
        <tr>
            <th>Foto do Álbum</th>
            <td>
                <img src="/@Model.Album.Foto" style="max-height: 50px; max-width: 50px"/>
            </td>
        </tr>
        <tr>
            <th>Audio</th>
            <td>
                <audio controls>
                    <source src="/@Model.FilePath" type="audio/wav">
                    <source src="/@Model.FilePath" type="audio/mp3">
                </audio>
            </td>
        </tr>
        <tr>
            <th>@Html.DisplayNameFor(model => model.DonoFK)</th>
            <td><a asp-controller="Utilizadores" asp-action="Details" asp-route-id="@Model.Dono.Id">@Html.DisplayFor(model => model.Dono.Username)</a></td>
        </tr>
    </table>
</div>
<div>
    <br/>
        <a asp-action="Index"><i class="bi bi-arrow-90deg-left" style="color: white"> Voltar </i></a>
    @if (dono || User.IsInRole("Administrador"))
    {
        <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-secondary" style="margin-right: 15px">Editar Música</a>
        <a asp-action="Delete" asp-route-id="@Model?.Id" class="btn btn-danger">Apagar Música</a>
    }

</div>

<script>

    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/likes")
        .configureLogging(signalR.LogLevel.Information)
        .withAutomaticReconnect()
        .build();

    async function start() {
        try {
            await connection.start();
            
            connection.on("whatever", (message) => {
                console.log(message)
            });


            console.log("SignalR Connected.");
        } catch (err) {
            console.log(err);
            setTimeout(start, 5000);
        }
    };
    
    // Start the connection.
    start();
    </script>